
<project name="openfast4j" default="all">

	<property name="src.dir" value="src"/>
	<property name="demo.dir" value="demo"/>
	<property name="test.dir" value="test"/>
	<property name="test.unit.dir" value="${test.dir}/unit"/>
	<property name="test.acceptance.dir" value="${test.dir}/acceptance"/>
	<property name="build.dir" value="build"/>
	<property name="doc.dir" value="doc"/>

	<property name="build.classes.dir" value="${build.dir}/classes"/>
	<property name="build.test.classes.dir" value="${build.dir}/test-classes"/>
	<property name="test.results.dir" value="${build.dir}/test-results"/>
	<property name="dist.dir" value="${build.dir}/dist"/>
	<property name="lib" value="${basedir}/lib"/>
	
	<!-- NOTE: antcontrib must be in ANT_HOME/lib -->
	<taskdef resource="net/sf/antcontrib/antlib.xml" />
	
	<target name="init">
		<!-- GENERATE LIBRARY PROPERTIES -->
		<dirset dir="${lib}" id="lib.dirs" includes="*"/>
		<pathconvert property="lib.versions" refid="lib.dirs" pathsep=",">
			<mapper type="flatten"/>
		</pathconvert>
		<for param="cur.lib" list="${lib.versions}">
			<sequential>
				<fileset id="lib.@{cur.lib}.files" dir="${lib}/@{cur.lib}" includes="*.jar" />
				<path id="lib.@{cur.lib}.path">
					<fileset refid="lib.@{cur.lib}.files"/>
				</path>
			</sequential>
		</for>

		<!-- SET UP SRC AND TEST CLASSPATHS -->
		<path id="src.path">
		</path>
		
		<path id="src.code">
			<pathelement location="${src.dir}"/>
			<pathelement location="${demo.dir}"/>
		</path>
		
		<path id="test.code">
			<pathelement location="${test.unit.dir}"/>
		</path>
		
		<path id="test.path">
			<pathelement location="${build.classes.dir}"/>
			<pathelement location="${build.test.classes.dir}"/>
			<path refid="lib.junit-3.8.1.path"/>
			<path refid="lib.emma-2.0.5312.path"/>
		</path>
		
		<path id="emma.test.path">
			<pathelement location="${build.dir}/instr"/>
			<path refid="test.path"/>
		</path>
		
		<path id="build.classpath">
			<pathelement location="${build.classes.dir}"/>
		</path>
		
		<taskdef resource="emma_ant.properties" classpathref="lib.emma-2.0.5312.path"/>
	</target>
	
    <target name="all" depends="clean, jar, unit-test, coverage-report" description="builds and tests everything" />
	 

	<target name="compile">
		<mkdir dir="${build.classes.dir}"/>
		<javac srcdir="${src.dir}" destdir="${build.classes.dir}" debug="yes" debuglevel="lines,source,vars"/>
		<!--javac srcdir="${demo.dir}" destdir="${build.classes.dir}" classpath="${build.classes.dir}" debug="yes" debuglevel="lines,source,vars"/-->
	</target>
	
	<target name="compile-test" depends="init,compile">
		<mkdir dir="${build.test.classes.dir}"/>
		<javac srcdir="${test.unit.dir}" destdir="${build.test.classes.dir}" classpathref="test.path" debug="yes" debuglevel="lines,source,vars"/>
		<javac srcdir="${test.acceptance.dir}" destdir="${build.test.classes.dir}" classpathref="test.path" debug="yes" debuglevel="lines,source,vars"/>
		<copy todir="${build.test.classes.dir}">
			<fileset dir="${test.unit.dir}" includes="**/*.xml" />
		</copy>
	</target>
	
    <target name="jar" depends="compile, compile-test">
    	<mkdir dir="${dist.dir}"/>
    	<jar destfile="${dist.dir}/${ant.project.name}.jar" basedir="${build.classes.dir}" includes="**/*.class"/>
    	<jar destfile="${dist.dir}/${ant.project.name}-test.jar" basedir="${build.test.classes.dir}" includes="**/*.class"/>
    </target>
	
	<target name="instr" depends="init, jar">
		<emma>
	      <instr instrpathref="build.classpath"
	             destdir="${build.dir}/instr"	
	             metadatafile="${test.results.dir}/metadata.emma"
	             merge="true"
	      />
	    </emma>
	</target>
	
    <target name="unit-test" depends="instr">
    	<mkdir dir="${test.results.dir}" />  	
    	<junit showoutput="yes" printsummary="yes" haltonerror="yes" haltonfailure="yes" fork="true">	
    		<classpath refid="emma.test.path" />
			<sysproperty key="emma.coverage.out.file" value="${test.results.dir}/coverage.emma" />
			<sysproperty key="emma.coverage.out.merge" value="true" />
    		<jvmarg line="-ea"/>
    		<batchtest todir="${test.results.dir}">
    			<fileset includes="**/*Test.java" dir="${test.unit.dir}" />
    			<fileset includes="**/*Test.java" excludes="**/MessageRoundTripTest.java" dir="${test.acceptance.dir}" />
    			<formatter type="xml" usefile="true" />
    		</batchtest>
			<formatter type="xml"/>
    	</junit>
    </target>
	
	<target name="coverage-report" depends="unit-test">
		<emma>
		   <report sourcepath="${src.dir}" >
		      <fileset dir="${test.results.dir}" >
		         <include name="*.emma" />
		      </fileset>
		      <html outfile="${test.results.dir}/coverage.html" />
		   </report>
		</emma>
	</target>
	
	<javadoc 
			destdir="doc"
			author="true"
			version="true"
			windowtitle="OpenFAST Documentation">
		
		<packageset dir="${src.dir}">
		</packageset>
	</javadoc>

	<target name="clean">
		<delete dir="${build.dir}"/>
	</target>




</project>

